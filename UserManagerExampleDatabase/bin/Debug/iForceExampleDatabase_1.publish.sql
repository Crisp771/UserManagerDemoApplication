/*
Deployment script for iForceExampleDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "iForceExampleDatabase"
:setvar DefaultFilePrefix "iForceExampleDatabase"
:setvar DefaultDataPath "F:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "F:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Roles]...';


GO
CREATE TABLE [dbo].[Roles] (
    [Id]   INT           NOT NULL,
    [Name] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Statuses]...';


GO
CREATE TABLE [dbo].[Statuses] (
    [Id]   INT           NOT NULL,
    [Name] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]        INT            IDENTITY (1, 1) NOT NULL,
    [Name]      NVARCHAR (150) NOT NULL,
    [RoleId]    INT            NOT NULL,
    [UpdatedAt] DATETIME       NOT NULL,
    [StatusId]  INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD DEFAULT GETDATE() FOR [UpdatedAt];


GO
PRINT N'Creating [dbo].[FK_Role]...';


GO
ALTER TABLE [dbo].[Users]
    ADD CONSTRAINT [FK_Role] FOREIGN KEY ([RoleId]) REFERENCES [dbo].[Roles] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Status]...';


GO
ALTER TABLE [dbo].[Users]
    ADD CONSTRAINT [FK_Status] FOREIGN KEY ([StatusId]) REFERENCES [dbo].[Statuses] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

-- Lookup Tables
MERGE INTO Roles AS Target 
USING (VALUES 
  (1, N'Administrator'), 
  (2, N'Manager'), 
  (3, N'User')
) 
AS Source (Id, Name) 
ON Target.Id = Source.Id 
WHEN MATCHED THEN 
UPDATE SET Name = Source.Name 
WHEN NOT MATCHED BY TARGET THEN 
INSERT (Id, Name) 
VALUES (Id, Name) 
WHEN NOT MATCHED BY SOURCE THEN 
DELETE;

MERGE INTO Statuses AS Target 
USING (VALUES 
  (1, N'New'), 
  (2, N'Active'), 
  (3, N'Disabled')
) 
AS Source (Id, Name) 
ON Target.Id = Source.Id 
WHEN MATCHED THEN 
UPDATE SET Name = Source.Name 
WHEN NOT MATCHED BY TARGET THEN 
INSERT (Id, Name) 
VALUES (Id, Name) 
WHEN NOT MATCHED BY SOURCE THEN 
DELETE;

--Make sure user table is clean

DELETE FROM Users;

-- Generated by a handy tool at www.mockaroo.com

insert into Users (name, roleid, updatedat, statusid) values (null, 81, '2017-02-24 08:06:40', 47);
insert into Users (name, roleid, updatedat, statusid) values (null, 73, '2017-04-03 12:58:51', 20);
insert into Users (name, roleid, updatedat, statusid) values (null, 17, '2016-12-04 05:51:10', 18);
insert into Users (name, roleid, updatedat, statusid) values (null, 2, '2017-01-09 17:43:16', 99);
insert into Users (name, roleid, updatedat, statusid) values (null, 9, '2017-07-28 00:43:46', 81);
insert into Users (name, roleid, updatedat, statusid) values (null, 49, '2017-05-15 02:10:45', 76);
insert into Users (name, roleid, updatedat, statusid) values (null, 4, '2017-06-08 13:50:06', 84);
insert into Users (name, roleid, updatedat, statusid) values (null, 43, '2016-12-11 16:20:57', 2);
insert into Users (name, roleid, updatedat, statusid) values (null, 97, '2017-06-17 19:55:38', 7);
insert into Users (name, roleid, updatedat, statusid) values (null, 52, '2016-10-21 16:39:25', 53);
insert into Users (name, roleid, updatedat, statusid) values (null, 49, '2016-11-22 03:36:00', 100);
insert into Users (name, roleid, updatedat, statusid) values (null, 19, '2016-11-09 18:12:02', 34);
insert into Users (name, roleid, updatedat, statusid) values (null, 65, '2017-03-07 11:30:38', 73);
insert into Users (name, roleid, updatedat, statusid) values (null, 7, '2016-11-23 04:32:35', 53);
insert into Users (name, roleid, updatedat, statusid) values (null, 14, '2016-12-26 10:10:28', 84);
insert into Users (name, roleid, updatedat, statusid) values (null, 54, '2017-03-28 03:41:27', 71);
insert into Users (name, roleid, updatedat, statusid) values (null, 35, '2017-04-28 05:44:01', 31);
insert into Users (name, roleid, updatedat, statusid) values (null, 14, '2016-12-22 02:30:45', 60);
insert into Users (name, roleid, updatedat, statusid) values (null, 19, '2016-09-18 13:25:11', 68);
insert into Users (name, roleid, updatedat, statusid) values (null, 90, '2017-02-06 23:04:41', 62);
insert into Users (name, roleid, updatedat, statusid) values (null, 31, '2017-04-22 09:37:00', 94);
insert into Users (name, roleid, updatedat, statusid) values (null, 34, '2017-06-13 02:33:23', 79);
insert into Users (name, roleid, updatedat, statusid) values (null, 67, '2017-04-18 16:28:24', 58);
insert into Users (name, roleid, updatedat, statusid) values (null, 55, '2017-01-05 20:25:27', 99);
insert into Users (name, roleid, updatedat, statusid) values (null, 86, '2017-01-02 06:40:00', 97);
insert into Users (name, roleid, updatedat, statusid) values (null, 20, '2017-08-04 08:27:10', 26);
insert into Users (name, roleid, updatedat, statusid) values (null, 77, '2016-10-02 09:44:29', 14);
insert into Users (name, roleid, updatedat, statusid) values (null, 69, '2017-07-18 18:13:36', 15);
insert into Users (name, roleid, updatedat, statusid) values (null, 11, '2017-01-27 23:54:31', 99);
insert into Users (name, roleid, updatedat, statusid) values (null, 95, '2017-03-13 02:46:55', 16);
insert into Users (name, roleid, updatedat, statusid) values (null, 88, '2017-09-07 12:57:58', 30);
insert into Users (name, roleid, updatedat, statusid) values (null, 99, '2016-10-08 19:28:55', 48);
insert into Users (name, roleid, updatedat, statusid) values (null, 28, '2016-12-23 22:22:41', 56);
insert into Users (name, roleid, updatedat, statusid) values (null, 1, '2016-12-09 05:31:26', 30);
insert into Users (name, roleid, updatedat, statusid) values (null, 16, '2017-08-09 08:04:42', 55);
insert into Users (name, roleid, updatedat, statusid) values (null, 13, '2016-11-07 14:38:37', 76);
insert into Users (name, roleid, updatedat, statusid) values (null, 94, '2017-05-26 21:09:50', 49);
insert into Users (name, roleid, updatedat, statusid) values (null, 92, '2016-11-24 02:27:06', 49);
insert into Users (name, roleid, updatedat, statusid) values (null, 74, '2017-07-23 18:01:07', 86);
insert into Users (name, roleid, updatedat, statusid) values (null, 53, '2017-08-15 10:09:42', 49);
insert into Users (name, roleid, updatedat, statusid) values (null, 85, '2017-01-23 09:17:18', 82);
insert into Users (name, roleid, updatedat, statusid) values (null, 5, '2017-06-22 18:33:30', 25);
insert into Users (name, roleid, updatedat, statusid) values (null, 98, '2016-09-25 03:34:04', 88);
insert into Users (name, roleid, updatedat, statusid) values (null, 35, '2017-08-11 07:33:15', 54);
insert into Users (name, roleid, updatedat, statusid) values (null, 6, '2017-02-26 02:41:11', 46);
insert into Users (name, roleid, updatedat, statusid) values (null, 87, '2016-12-23 01:09:50', 66);
insert into Users (name, roleid, updatedat, statusid) values (null, 16, '2017-09-07 09:07:46', 74);
insert into Users (name, roleid, updatedat, statusid) values (null, 23, '2017-09-03 21:01:39', 58);
insert into Users (name, roleid, updatedat, statusid) values (null, 96, '2017-02-14 09:48:04', 87);
insert into Users (name, roleid, updatedat, statusid) values (null, 5, '2017-06-12 16:08:42', 57);
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
